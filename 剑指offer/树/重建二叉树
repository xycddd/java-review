#### 题目描述
输入某二叉树的前序遍历和中序遍历的结果，请重建出该二叉树。假设输入的前序遍历和中序遍历的结果中都不含重复的数字。例如输入前序遍历序列
{1,2,4,7,3,5,6,8}和中序遍历序列{4,7,2,1,5,3,8,6}，则重建二叉树并返回。
#### 算法解析
```
/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public TreeNode reConstructBinaryTree(int [] pre,int [] in) {
        return createTree(pre,in,0,pre.length-1,0,in.length-1);
    }

    public TreeNode createTree(int[] pre,int[] in,int preL,int preR,int inL,int inR){
        if(preL>preR){
            return null;
        }
        TreeNode root=new TreeNode(0);
        root.val=pre[preL];
        
        int k;
        for(k=inL;k<=inR;k++){
            if(in[k]==pre[preL])
                break;
        }
        int numLeft=k-inL;
        root.left=createTree(pre,in,preL+1,preL+numLeft,inL,k-1);
        root.right=createTree(pre,in,preL+numLeft+1,preR,k+1,inR);
        return root;
    }
}
```
